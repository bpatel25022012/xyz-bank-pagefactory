<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="27454" started-at="2020-04-14T16:12:19Z" finished-at="2020-04-14T16:12:46Z">
    <groups>
      <group name="regression">
        <method signature="BankTest.bankManagerShouldAddCustomerSuccessfully()[pri:0, instance:com.bank.testsuit.BankTest@7ca48474]" name="bankManagerShouldAddCustomerSuccessfully" class="com.bank.testsuit.BankTest"/>
        <method signature="BankTest.bankManagerShouldDeleteCustomerSuccessfully()[pri:5, instance:com.bank.testsuit.BankTest@7ca48474]" name="bankManagerShouldDeleteCustomerSuccessfully" class="com.bank.testsuit.BankTest"/>
        <method signature="BankTest.bankManagerShouldOpenAccountSuccessfully()[pri:1, instance:com.bank.testsuit.BankTest@7ca48474]" name="bankManagerShouldOpenAccountSuccessfully" class="com.bank.testsuit.BankTest"/>
        <method signature="BankTest.customerShouldDepositMoneySuccessfully()[pri:3, instance:com.bank.testsuit.BankTest@7ca48474]" name="customerShouldDepositMoneySuccessfully" class="com.bank.testsuit.BankTest"/>
        <method signature="BankTest.customerShouldLoginAndLogoutSuccessfully()[pri:2, instance:com.bank.testsuit.BankTest@7ca48474]" name="customerShouldLoginAndLogoutSuccessfully" class="com.bank.testsuit.BankTest"/>
        <method signature="BankTest.customerShouldWithdrawMoneySuccessfully()[pri:4, instance:com.bank.testsuit.BankTest@7ca48474]" name="customerShouldWithdrawMoneySuccessfully" class="com.bank.testsuit.BankTest"/>
      </group> <!-- regression -->
    </groups>
    <test name="Surefire test" duration-ms="27454" started-at="2020-04-14T16:12:19Z" finished-at="2020-04-14T16:12:46Z">
      <class name="com.bank.testsuit.BankTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bank.testsuit.BankTest@7ca48474]" name="setUp" is-config="true" duration-ms="27" started-at="2020-04-14T16:12:19Z" finished-at="2020-04-14T16:12:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:com.bank.testsuit.BankTest@7ca48474]" name="openBrowser" is-config="true" duration-ms="16521" started-at="2020-04-14T16:12:19Z" finished-at="2020-04-14T16:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="bankManagerShouldAddCustomerSuccessfully()[pri:0, instance:com.bank.testsuit.BankTest@7ca48474]" name="bankManagerShouldAddCustomerSuccessfully" duration-ms="3957" started-at="2020-04-14T16:12:35Z" finished-at="2020-04-14T16:12:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerShouldAddCustomerSuccessfully -->
        <test-method status="PASS" signature="bankManagerShouldOpenAccountSuccessfully()[pri:1, instance:com.bank.testsuit.BankTest@7ca48474]" name="bankManagerShouldOpenAccountSuccessfully" duration-ms="1301" started-at="2020-04-14T16:12:39Z" finished-at="2020-04-14T16:12:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerShouldOpenAccountSuccessfully -->
        <test-method status="PASS" signature="customerShouldLoginAndLogoutSuccessfully()[pri:2, instance:com.bank.testsuit.BankTest@7ca48474]" name="customerShouldLoginAndLogoutSuccessfully" duration-ms="1203" started-at="2020-04-14T16:12:41Z" finished-at="2020-04-14T16:12:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerShouldLoginAndLogoutSuccessfully -->
        <test-method status="PASS" signature="customerShouldDepositMoneySuccessfully()[pri:3, instance:com.bank.testsuit.BankTest@7ca48474]" name="customerShouldDepositMoneySuccessfully" duration-ms="1296" started-at="2020-04-14T16:12:42Z" finished-at="2020-04-14T16:12:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerShouldDepositMoneySuccessfully -->
        <test-method status="PASS" signature="customerShouldWithdrawMoneySuccessfully()[pri:4, instance:com.bank.testsuit.BankTest@7ca48474]" name="customerShouldWithdrawMoneySuccessfully" duration-ms="1103" started-at="2020-04-14T16:12:43Z" finished-at="2020-04-14T16:12:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerShouldWithdrawMoneySuccessfully -->
        <test-method status="PASS" signature="bankManagerShouldDeleteCustomerSuccessfully()[pri:5, instance:com.bank.testsuit.BankTest@7ca48474]" name="bankManagerShouldDeleteCustomerSuccessfully" duration-ms="912" started-at="2020-04-14T16:12:44Z" finished-at="2020-04-14T16:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerShouldDeleteCustomerSuccessfully -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.bank.testsuit.BankTest@7ca48474]" name="tearDown" is-config="true" duration-ms="1066" started-at="2020-04-14T16:12:45Z" finished-at="2020-04-14T16:12:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.bank.testsuit.BankTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
